{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Applications/MAMP/htdocs/battle4/app/api/twitch/route.js"],"sourcesContent":["import fetch from \"node-fetch\";\n\nexport async function GET(request) {\n  const { searchParams } = new URL(request.url);\n  const user = searchParams.get(\"user\");\n\n  if (!user) {\n    return new Response(JSON.stringify({ error: \"user param required\" }), {\n      status: 400,\n    });\n  }\n\n  const clientId = process.env.TWITCH_CLIENT_ID;\n  const clientSecret = process.env.TWITCH_CLIENT_SECRET;\n\n  if (!clientId || !clientSecret) {\n    return new Response(\n      JSON.stringify({ error: \"Twitch credentials not set\" }),\n      { status: 500 }\n    );\n  }\n\n  // Exchange client credentials for app access token\n  const tokenRes = await fetch(\"https://id.twitch.tv/oauth2/token\", {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n    body: `client_id=${clientId}&client_secret=${clientSecret}&grant_type=client_credentials`,\n  });\n  const tokenJson = await tokenRes.json();\n  const accessToken = tokenJson.access_token;\n\n  // Get user stream info\n  const streamRes = await fetch(\n    `https://api.twitch.tv/helix/streams?user_login=${encodeURIComponent(\n      user\n    )}`,\n    {\n      headers: {\n        \"Client-ID\": clientId,\n        Authorization: `Bearer ${accessToken}`,\n      },\n    }\n  );\n  const streamJson = await streamRes.json();\n\n  return new Response(JSON.stringify(streamJson), {\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,IAAI,OAAO;IAC/B,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,OAAO,aAAa,GAAG,CAAC;IAE9B,IAAI,CAAC,MAAM;QACT,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC;YAAE,OAAO;QAAsB,IAAI;YACpE,QAAQ;QACV;IACF;IAEA,MAAM,WAAW,QAAQ,GAAG,CAAC,gBAAgB;IAC7C,MAAM,eAAe,QAAQ,GAAG,CAAC,oBAAoB;IAErD,IAAI,CAAC,YAAY,CAAC,cAAc;QAC9B,OAAO,IAAI,SACT,KAAK,SAAS,CAAC;YAAE,OAAO;QAA6B,IACrD;YAAE,QAAQ;QAAI;IAElB;IAEA,mDAAmD;IACnD,MAAM,WAAW,MAAM,IAAA,0KAAK,EAAC,qCAAqC;QAChE,QAAQ;QACR,SAAS;YAAE,gBAAgB;QAAoC;QAC/D,MAAM,CAAC,UAAU,EAAE,SAAS,eAAe,EAAE,aAAa,8BAA8B,CAAC;IAC3F;IACA,MAAM,YAAY,MAAM,SAAS,IAAI;IACrC,MAAM,cAAc,UAAU,YAAY;IAE1C,uBAAuB;IACvB,MAAM,YAAY,MAAM,IAAA,0KAAK,EAC3B,CAAC,+CAA+C,EAAE,mBAChD,OACC,EACH;QACE,SAAS;YACP,aAAa;YACb,eAAe,CAAC,OAAO,EAAE,aAAa;QACxC;IACF;IAEF,MAAM,aAAa,MAAM,UAAU,IAAI;IAEvC,OAAO,IAAI,SAAS,KAAK,SAAS,CAAC,aAAa;QAC9C,SAAS;YAAE,gBAAgB;QAAmB;IAChD;AACF","debugId":null}}]
}